@* Pages/Habitaciones.razor *@
@page "/habitaciones"
@inject HabitacionServicio habitacionServicio
@inject IJSRuntime jsRuntime
<h3>Habitaciones</h3>
<NavLink class="nav-link" href="habitacion/agregar">
    <span class="oi oi-plus" aria-hidden="true">Agregar habitacion</span>
</NavLink>
<label>Buscar habitacion:</label>
<input type="text" @oninput="@( (e) => Filtro(e) )">

<div class="row">
    <div class="col-md-6">
        <table class="table table-hover">
        <thead>
            <tr>
            <th>Número de habitación</th>
            <th>Tipo</th>
            <th>Piso</th>
            <th>Costo</th>
            <th>Acción</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var habitacion in habitaciones) {
                <tr>
                <td>@habitacion.NoHabitacion</td>
                <td>@habitacion.Tipo</td>
                <td>@habitacion.Piso</td>
                <td>@habitacion.Costo</td>
                <td>

                <a href="habitacion/editar/@habitacion.Id" class="btn btn-success">Editar</a>

                <a class="btn btn-danger" @onclick="async ()=> await
                Borrar(habitacion)">Borrar</a>
                </td>
                </tr>
            }
        </tbody>
        </table>
        <p>Total de habitaciones = @TotH().ToString()</p> <! Aqui va algo para mostrar el total>
        <p>Total de habitaciones individuales = @TotInd().ToString()</p>
        <p>Total de habitaciones dobles = @TotDob().ToString()</p>
        <p>Total de habitaciones triples = @TotTri().ToString()</p>
    </div>
</div>

@code {
    private List<Habitacion> habitaciones = new();
    protected override void OnInitialized() {
        habitaciones = habitacionServicio.ObtenerTodo("");
    }
    private async Task Borrar(Habitacion habitacion) {
        bool confirmed = await jsRuntime.InvokeAsync<bool>("confirm", "Estas seguro????");
        if (confirmed)
            if(habitacionServicio.Borrar(habitacion.Id))
                habitaciones.Remove(habitacion);
    }
    protected void Filtro(ChangeEventArgs e) {
        string cadenabuscar = e.Value.ToString();
        habitaciones = habitacionServicio.ObtenerTodo(cadenabuscar);
    }
    private double TotH() {
        return habitacionServicio.Total();
    }
    private double TotInd() {
        return habitacionServicio.TotalIn();
    }
    private double TotDob() {
        return habitacionServicio.TotalDo();
    }
    private double TotTri() {
        return habitacionServicio.TotalTr();
    }
    
}